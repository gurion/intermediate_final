Gurion Marks, Jeremy Mazumder
gmarks2, jmazumd1
Intermediate Programming Fall '16
Section 1
Final Project

This is the final project for Intermediate Programming - to design and build a plagiarism checking program.

1) Running
   Run make in the src directory. An executable called run will be created that you can then run.
       The execution step should look like:
       	   ./run <file_path> <sensitivity>
	   	 OR
	   ./run <file_path> (sensitivity will be assumed medium)

2) Testing
   Run make in the tests directory. An executable called test will be created that runs unit tests on functions used.

3) Plan of Attack
	I initially thought to make a "document" class, which essentially would just hold an Ngram collection. Each file would be turned into an Ngram collection, stored in a document, a class called docList would hold a vector of documents. I realized that this would be an unnecessary middle step, and just made a vector of Ngram collections as needed. Therefore I took out the middle document class, and slightly modified Ngram collection for added functionality. DocList then just holds a list of the file names, and an Ngram collection is created for each file and stored in a vector during plagiarism checking step. The algorithm builds a string of file pairs which gets printed by the driver.  

	The plagiarism algorithms are held in a file called plagiarism algorithms. I'm essentially using the fingerprint method - if a certain percentage of Ngrams in the smaller file match Ngrams in the larger file, then the pair is classified as plagiarism. Therefore I can just use a switch statement and modify the percentage. Sensitivities are classified as follows: h - 5%, m - 10%, l - 20%.

4) Design
	Class: NgramCollection
		Description - This class holds functions for getting input from a file and turning it into an NgramCollection.
		Function: getInput
		Function: increment
		Function: getN
		Function: getNumWords
	
	Class: DocList
		Description - This class holds functions for checking files and making a list of file names.
		Function: MakeList
		Function: CheckList
		Function: getNumDocs

	File: PlagiarismAlgorithms
		Description - Function to check a list of files for plagiarism at a specified sensitivity.
		Function: algs
		
	File: Driver
		Holds main method for the program, and deals with input.

5) Flags
   Sensitivities are classified as follows: h - 5%, m - 10%, l - 20%.

6) Timing

7) Challenges
   I had initial challenges on trying to figure out how to best get and store input in order to make the program efficient.

8) Future
   There are many things I can do to make the plagiarism checking more accurate, such as implementing more algorithms or a different type of checking. I can also work to make it more efficient. 
